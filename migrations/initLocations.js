// migrations/initLocations.js
const db = require('../config/db');

(async () => {
  try {
    // 1) –°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É locations, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    await db.query(`
      CREATE TABLE IF NOT EXISTS locations (
        id INT AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(100) NOT NULL,
        address VARCHAR(255),
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      );
    `);

    // 2) –í—Å—Ç–∞–≤–∏—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω—É—é —Ç–æ—á–∫—É —Å id = 1, –µ—Å–ª–∏ –µ—ë –µ—â—ë –Ω–µ—Ç
    await db.query(`
      INSERT INTO locations (id, name, address)
      SELECT 1, '–¢–æ—á–∫–∞ 1 (–®–∞—É—Ä–º–∞–Ω–∏—è)', '–û—Å–Ω–æ–≤–Ω–∞—è —Ç–æ—á–∫–∞'
      FROM DUAL
      WHERE NOT EXISTS (SELECT 1 FROM locations WHERE id = 1);
    `);

    console.log('‚ÑπÔ∏è  –¢–æ—á–∫–∞ 1 –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ locations (–µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª–∞)');

    // 3) –°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É user_locations, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    await db.query(`
      CREATE TABLE IF NOT EXISTS user_locations (
        user_id     INT NOT NULL,
        location_id INT NOT NULL,
        PRIMARY KEY (user_id, location_id),
        FOREIGN KEY (user_id)     REFERENCES users(id),
        FOREIGN KEY (location_id) REFERENCES locations(id)
      );
    `);

    // 4) –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ —Å—Ç–æ–ª–±—Ü–∞ location_id –≤ orders
    const [cols] = await db.query(`
      SHOW COLUMNS FROM orders LIKE 'location_id';
    `);
    if (cols.length === 0) {
      // 5) –î–æ–±–∞–≤–∏—Ç—å —Å—Ç–æ–ª–±–µ—Ü (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é = 1)
      await db.query(`
        ALTER TABLE orders
          ADD COLUMN location_id INT DEFAULT 1;
      `);
      console.log('‚ûï –î–æ–±–∞–≤–ª–µ–Ω orders.location_id');
    } else {
      console.log('‚ÑπÔ∏è  –°—Ç–æ–ª–±–µ—Ü orders.location_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    }

    // 6) –ó–∞–ø–æ–ª–Ω–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–∫–∞–∑—ã –∑–Ω–∞—á–µ–Ω–∏–µ–º 1
    await db.query(`
      UPDATE orders
        SET location_id = 1
        WHERE location_id IS NULL;
    `);
    console.log('‚úÖ –°—Ç–∞—Ä—ã–µ –∑–∞–∫–∞–∑—ã –ø—Ä–∏–≤—è–∑–∞–Ω—ã –∫ —Ç–æ—á–∫–µ 1');

    // 7) –°–¥–µ–ª–∞—Ç—å —Å—Ç–æ–ª–±–µ—Ü NOT NULL
    await db.query(`
      ALTER TABLE orders
        MODIFY COLUMN location_id INT NOT NULL;
    `);
    console.log('üîí orders.location_id —Ç–µ–ø–µ—Ä—å NOT NULL');

    console.log('üéâ –ú–∏–≥—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
    process.exit(0);

  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:', err);
    process.exit(1);
  }
})();
